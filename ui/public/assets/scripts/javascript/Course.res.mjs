// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Auth from "./Auth.res.mjs";
import * as Meta from "./Meta.res.mjs";
import * as Browser from "./Browser.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

function make_listing_table() {
  var div = Browser.makeElement("div");
  var header = Browser.makeElement("h2");
  header.innerText = "Cursos";
  div.appendChild(header);
  var table = Browser.makeElement("table");
  table.id = "course_table";
  var header_row = Browser.makeElement("tr");
  var checkbox_header = Browser.makeElement("th");
  checkbox_header.id = "checkbox_header";
  var select_all_checkbox = Browser.makeElement("input");
  select_all_checkbox.type = "checkbox";
  select_all_checkbox.id = "select_all_checkbox";
  checkbox_header.appendChild(select_all_checkbox);
  header_row.appendChild(checkbox_header);
  var course_name_header = Browser.makeElement("th");
  course_name_header.id = "course_name_header";
  course_name_header.innerText = "Nome";
  header_row.appendChild(course_name_header);
  var edit_header = Browser.makeElement("th");
  edit_header.id = "edit_header";
  edit_header.innerText = "Editar";
  header_row.appendChild(edit_header);
  table.appendChild(header_row);
  div.appendChild(table);
  var delete_button = Browser.makeElement("button");
  delete_button.id = "delete_button";
  delete_button.innerText = "Excluir selecionados";
  div.appendChild(delete_button);
  return div;
}

function make_creation_form() {
  var div = Browser.makeElement("div");
  var fields = [{
      id: "name",
      kind: "text",
      label: "Nome:"
    }];
  var header = Browser.makeElement("h2");
  header.innerText = "Novo curso";
  div.appendChild(header);
  var form = Browser.FormBuilder.make_form(fields, "course_creation_form");
  div.appendChild(form);
  return div;
}

async function creation_handler($$event) {
  $$event.preventDefault();
  var dialog = Browser.getElement("user_dialog", "Course.creation_handler.dialog");
  var form = Browser.getElement("course_creation_form", "Course.creation_handler.form");
  dialog.innerText = "";
  var form_data = Object.fromEntries(new FormData(form));
  var token = Auth.getCredentials().token;
  var post_options = {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: "Bearer " + token
    },
    body: JSON.stringify(form_data)
  };
  var response_store = {};
  try {
    var response = await globalThis.fetch(Meta.endpoints.course, post_options);
    response_store.response = await response.clone();
  }
  catch (raw_error){
    var error = Caml_js_exceptions.internalToOCamlException(raw_error);
    console.log(error);
    dialog.innerText = "Erro na requisição";
  }
  try {
    var response$1 = response_store.response;
    var response$2 = response$1 !== undefined ? response$1 : ({
          __client_error: "[Course.creation_handler] No response in response_store"
        });
    var status = Core__Option.getExn(response$2.status, "[Course.creation_handler.status] Destructuring error");
    var exit = 0;
    if (status > 403 || status < 400) {
      if (status === 201 || status === 200) {
        dialog.innerText = "Curso criado com sucesso";
        return ;
      }
      exit = 1;
    } else {
      if (status < 401) {
        dialog.innerText = "Requisição inválida. Os dados informados estão corretos?";
        return ;
      }
      switch (status) {
        case 401 :
            dialog.innerText = "Sua conta não possui acesso a esse recurso";
            return ;
        case 402 :
            exit = 1;
            break;
        case 403 :
            dialog.innerText = "Requisição inválida. Os dados informados estão corretos?";
            return ;
        
      }
    }
    if (exit === 1) {
      console.log("Unexpected return status " + status.toString());
      return ;
    }
    
  }
  catch (raw_error$1){
    var error$1 = Caml_js_exceptions.internalToOCamlException(raw_error$1);
    console.log(error$1);
    dialog.innerText = "Erro ao processar resposta";
    return ;
  }
}

function structure() {
  var listing = make_listing_table();
  var form = make_creation_form();
  Browser.submitListen(form, creation_handler);
  var main = Browser.getElementByTag("main", "Course.structure.main");
  Browser.clearChildren(main);
  main.appendChild(listing);
  main.appendChild(form);
}

export {
  make_listing_table ,
  make_creation_form ,
  creation_handler ,
  structure ,
}
/* No side effect */
