// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


var $$Response = {};

var form = document.getElementById("login_form");

var dialog = document.getElementById("user_dialog");

async function login_handler($$event) {
  $$event.preventDefault();
  dialog.innerText = "";
  var form_data = Object.fromEntries(new FormData(form));
  var post_options = {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify(form_data)
  };
  var response_store = {};
  try {
    var response = await globalThis.fetch("http://localhost:3031/rpc/login", post_options);
    response_store.response = await response.clone();
    response_store.json = await response.json();
    console.log(response_store.response);
    console.log(response_store.json);
  }
  catch (exn){
    console.log({
          TAG: "Error",
          _0: "Erro na requisição"
        });
    dialog.innerText = "Erro na requisição";
  }
  try {
    var response$1 = response_store.response;
    var response$2 = response$1 !== undefined ? response$1 : ({
          __client_error: ""
        });
    var status = response$2.status;
    var status$1 = status !== undefined ? status : -1;
    var json = response_store.json;
    var json$1 = json !== undefined ? json : ({
          __client_error: "json function not found while destructuring object"
        });
    var email = form_data.email;
    var token = json$1.token;
    var token$1 = token !== undefined ? token : (console.log("Token field not found while destructuring"), "");
    var credentials = {
      email: email,
      token: token$1
    };
    var string = JSON.stringify(credentials);
    var credentials_stringified = string !== undefined ? string : "";
    console.log("response_store.json:");
    console.log(json$1);
    if (status$1 === 400) {
      dialog.innerText = "Requisição inválida. Os dados informados são válidos?";
      return ;
    } else if (status$1 === 403 || status$1 === 403) {
      dialog.innerText = "Credenciais inválidas: senha incorreta ou email inexistente";
      return ;
    } else if (status$1 === 200 || status$1 === 201) {
      console.log(JSON.stringify(credentials));
      sessionStorage.setItem("mirante_credentials", credentials_stringified);
      dialog.innerText = "Login realizado com sucesso";
      return ;
    } else {
      return ;
    }
  }
  catch (exn$1){
    console.log({
          TAG: "Error",
          _0: "Erro ao processar resposta"
        });
    dialog.innerText = "Erro ao processar resposta";
    return ;
  }
}

form.addEventListener("submit", login_handler);





/* form Not a pure module */
