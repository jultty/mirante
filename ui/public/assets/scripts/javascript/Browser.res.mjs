// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";

var ElementNotFound = /* @__PURE__ */Caml_exceptions.create("Browser.ElementNotFound");

var CredentialsNotFound = /* @__PURE__ */Caml_exceptions.create("Browser.CredentialsNotFound");

function getBody() {
  return Core__Option.getExn(document.getElementsByTagName("body")[0], "body not found");
}

function getElement(element, getter) {
  return Core__Option.getExn(document.getElementById(element), "[" + getter + "] " + element + " not found");
}

function getElementsByTag(tag, getter) {
  var array = document.getElementsByTagName(tag);
  var match = array[0];
  if (match !== undefined) {
    return array;
  }
  throw {
        RE_EXN_ID: ElementNotFound,
        _1: "[" + getter + "] No <" + tag + "> elements found",
        Error: new Error()
      };
}

function getElementByTag(tag, getter) {
  var array = document.getElementsByTagName(tag);
  var element = array[0];
  if (element !== undefined) {
    return element;
  }
  throw {
        RE_EXN_ID: ElementNotFound,
        _1: "[" + getter + "] No <" + tag + "> element found",
        Error: new Error()
      };
}

function clearChildren(parent) {
  var array = Core__Option.getOr(parent.children, []);
  while(array.length > 0) {
    parent.removeChild(Core__Option.getExn(parent.lastElementChild, undefined));
  };
}

function listen(element, $$event, $$function) {
  element.addEventListener($$event, $$function);
}

function submitListen(element, $$function) {
  element.addEventListener("submit", $$function);
}

function listenFromWindow($$window, $$event, $$function) {
  $$window.addEventListener($$event, $$function);
}

function retrieve(key) {
  return Caml_option.nullable_to_opt(sessionStorage.getItem(key));
}

function store(key, contents) {
  sessionStorage.setItem(key, contents);
}

function makeElement(element) {
  return document.createElement(element);
}

export {
  ElementNotFound ,
  CredentialsNotFound ,
  getBody ,
  getElement ,
  getElementsByTag ,
  getElementByTag ,
  clearChildren ,
  listen ,
  submitListen ,
  listenFromWindow ,
  retrieve ,
  store ,
  makeElement ,
}
/* No side effect */
