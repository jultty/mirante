// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Meta from "./Meta.res.mjs";
import * as Browser from "./Browser.res.mjs";

function getCredentialsOption() {
  var stringifiedOpt = Browser.retrieve(Meta.schema.system.constants.storage_key);
  if (stringifiedOpt !== undefined) {
    return JSON.parse(stringifiedOpt);
  }
  
}

function getCredentials() {
  var credentials = Browser.retrieve(Meta.schema.system.constants.storage_key);
  var tmp;
  if (credentials !== undefined) {
    tmp = credentials;
  } else {
    throw {
          RE_EXN_ID: Browser.CredentialsNotFound,
          _1: "[Auth.getToken] Browser.retrieve returned None",
          Error: new Error()
        };
  }
  return JSON.parse(tmp);
}

function make_get_options() {
  var credentials = getCredentialsOption();
  var credentials$1;
  if (credentials !== undefined) {
    credentials$1 = credentials;
  } else {
    throw {
          RE_EXN_ID: Browser.CredentialsNotFound,
          _1: "[Auth.make_get_options] Can't assemble, credentials not found in store ",
          Error: new Error()
        };
  }
  return {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            Authorization: "Bearer " + credentials$1.token
          }
        };
}

export {
  getCredentialsOption ,
  getCredentials ,
  make_get_options ,
}
/* No side effect */
